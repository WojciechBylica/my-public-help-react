{"version":3,"sources":["GlobalStyle.js","Header/index.js","Main/styled.js","Main/index.js","Form/styled.js","Buttons/styled.js","Form/index.js","Section/styled.js","Section/index.js","Table/styled.js","Table/index.js","Buttons/index.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","normalize","Header","title","StyledMain","styled","main","Main","children","FormParagraph","p","RadioLabel","label","StyledFieldset","fieldset","primary","css","StyledInput","input","StyledButtonParagraph","ButtonsDiv","div","StyledButton","button","Form","addNewHelp","useState","amount","setAmount","setTitle","dateOfHelp","setDateOfHelp","from","setFrom","inputRef","useRef","useEffect","current","focus","onSubmit","event","preventDefault","trimmedTitle","trim","ref","value","onChange","target","type","step","min","required","name","placeholder","readOnly","onClick","StyledSection","section","Section","TableDiv","StyledTable","table","StyledTableTh","th","secondary","Table","helps","helpFromSource","removeHelp","helpsVariant","filter","map","help","scope","as","date","law","id","Buttons","setHelpFromSource","length","App","helpsFromLocalStorage","localStorage","getItem","JSON","parse","setHelps","setItem","stringify","helpLaw","reduce","currentSum","renderSummary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa208786.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n${normalize}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\n.body {\n    max-width: 900px;\n    margin: 0 auto;\n    font-size: 16px;\n    font-family: 'Jura', sans-serif;\n    \n}\n\n#root {\n    text-align: center;\n}\n`\n\n","const Header = ({ title }) => (\n    <h1>\n        {title}\n    </h1>\n);\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n    display: grid;\n    grid-template-columns: auto 1fr;\n    background: #27a5e2ad;\n\n    @media (max-width: 800px) {\n        display: block;\n    }\n`;\n","import { StyledMain } from \"./styled\";\n\nconst Main = ({ children }) => (\n    <StyledMain>\n        {children}\n    </StyledMain>\n);\n\nexport default Main;","import styled, { css } from \"styled-components\";\n\nexport const FormParagraph = styled.p`\n    margin: 10px 0px 5px 0px;\n`;\n\nexport const RadioLabel = styled.label`\n     display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const StyledFieldset = styled.fieldset`\n    width: 195px;\n    border: 1px solid #ccc;;\n    border-radius: 2px;\n\n    ${({ primary }) => primary && css` \n    display: flex;\n    justify-content: space-around;\n`} \n`;\n\nexport const StyledInput = styled.input`\n    width: 200px;\n`;\n\nexport const StyledButtonParagraph = styled.p`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n`;","import styled, { css } from \"styled-components\";\n\nexport const ButtonsDiv = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n\nexport const StyledButton = styled.button`\n    border: none;\n    background: white;\n    color: black;\n    padding: 10px;\n    margin: 10px;\n    cursor: pointer;\n\n    ${({ primary }) => primary && css` \n    width:197px;\n    margin: 5px 0;\n    `} \n\n    &:focus {\n    background: rgb(218, 213, 213);\n    }\n\n    &:hover {\n    background: rgb(243, 238, 238);\n    }\n\n    @media (max-width:500px) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n`;","import { useState, useRef, useEffect } from \"react\";\nimport { FormParagraph, StyledFieldset, StyledInput, StyledButtonParagraph, RadioLabel } from \"./styled\"\nimport { StyledButton } from \"../Buttons/styled\"\nconst Form = ({ addNewHelp }) => {\n\n    const [amount, setAmount] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [dateOfHelp, setDateOfHelp] = useState(\"\");\n    const [from, setFrom] = useState(\"\");\n    const helpLaw = \"Ustawa o COVID\"\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        const trimmedTitle = title.trim();\n        if (trimmedTitle) {\n            addNewHelp(amount, trimmedTitle, dateOfHelp, from, helpLaw);\n            setAmount(\"\");\n            setTitle(\"\");\n            setDateOfHelp(\"\");\n        };\n    };\n\n    const inputRef = useRef();\n    const focusInput = () => {\n        inputRef.current.focus()\n    };\n\n    useEffect(() => {\n        inputRef.current.focus()\n    }, [inputRef]);\n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <label>\n                <FormParagraph>kwota w PLN</FormParagraph>\n                <StyledInput\n                    ref={inputRef}\n                    value={amount}\n                    onChange={({ target }) => setAmount(target.value)}\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0.01\"\n                    required\n                />\n            </label>\n            <label>\n                <FormParagraph>rodzaj pomocy</FormParagraph>\n                <StyledInput\n                    value={title}\n                    onChange={({ target }) => setTitle(target.value)}\n                    type=\"text\"\n                    required\n                />\n            </label>\n            <label>\n                <FormParagraph>data otrzymania</FormParagraph>\n                <StyledInput\n                    value={dateOfHelp}\n                    onChange={({ target }) => setDateOfHelp(target.value)}\n                    type=\"date\"\n                    required\n                />\n            </label>\n            <RadioLabel>\n                <FormParagraph>źródło pomocy</FormParagraph>\n                <StyledFieldset primary>\n                    <label>\n                        ZUS\n                        <input\n                            onChange={({ target }) => setFrom(target.value)}\n                            type=\"radio\"\n                            name=\"source\"\n                            value=\"ZUS\"\n                            required\n                        />\n                    </label>\n                    <label>\n                        UP\n                        <input\n                            onChange={({ target }) => setFrom(target.value)}\n                            type=\"radio\"\n                            name=\"source\"\n                            value=\"UP\"\n                        />\n                    </label>\n                </StyledFieldset>\n            </RadioLabel>\n            <label>\n                <FormParagraph>Podstawa prawna</FormParagraph>\n                <StyledInput\n                    placeholder=\"ustawa o COVID\"\n                    readOnly\n                    value=\"ustawa o COVID\"\n                />\n            </label>\n            <StyledButtonParagraph >\n                <StyledButton primary onClick={focusInput}>\n                    Wpisz na listę\n                </StyledButton>\n            </StyledButtonParagraph>\n        </form>\n    );\n};\n\nexport default Form;","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n    padding: 5px;\n`;","import { StyledSection } from \"./styled\";\n\nconst Section = ({ title, children }) => (\n    <StyledSection>\n        <h2>{title}</h2>\n        {children}\n    </StyledSection>\n\n);\n\nexport default Section;","import styled, { css } from \"styled-components\";\n\nexport const TableDiv = styled.div`\n    overflow: auto;\n`;\n\nexport const StyledTable = styled.table`\n    border-collapse: collapse;\n    width: 100%;\n    font-size: 15px;\n    margin: 25px 0px;\n`;\n\nexport const StyledTableTh = styled.th`\n    border: 1px solid #ccc;\n    padding: 20px;\n    text-align: center;\n    vertical-align: middle;\n\n    ${({ primary }) => primary && css` \n    padding: 2px;\n    `} \n\n    ${({ secondary }) => secondary && css` \n    word-break: break-word;\n    `}\n\n    @media (max-width: 500px) {\n        word-break: initial;\n    }\n`;","import { TableDiv, StyledTable, StyledTableTh, } from \"./styled\";\nimport { StyledButton } from \"../Buttons/styled\";\n\nconst Table = ({ helps, helpFromSource, removeHelp }) => {\n\n    const helpsVariant = (helpFromSource !== \"all\"\n        ? helps.filter(({ from }) => from === helpFromSource)\n        : helps);\n    return (\n        <TableDiv>\n            <StyledTable>\n                <tbody>\n                    {!!helps && helpsVariant.map(\n                        help => (\n                            <tr key={help.id}>\n                                <StyledTableTh secondary scope=\"row\">{help.amount}</StyledTableTh>\n                                <StyledTableTh secondary as=\"td\">{help.title}</StyledTableTh>\n                                <StyledTableTh as=\"td\">{help.date}</StyledTableTh>\n                                <StyledTableTh as=\"td\">{help.from}</StyledTableTh>\n                                <StyledTableTh as=\"td\">{help.law}</StyledTableTh>\n                                {helpFromSource === \"all\"\n                                    ? <StyledTableTh as=\"td\" primary>\n                                        <StyledButton onClick={() => removeHelp(help.id)}>\n                                            usuń\n                                        </StyledButton>\n                                    </StyledTableTh>\n                                    : \"\"}\n                            </tr>\n                        )\n                    )}\n                </tbody>\n            </StyledTable>\n        </TableDiv>\n    );\n};\n\nexport default Table;","import { ButtonsDiv, StyledButton } from \"./styled\";\n\nconst Buttons = ({ helps, setHelpFromSource }) => {\n    return (\n        !!helps.length &&\n             <ButtonsDiv>\n                <>\n                    <StyledButton onClick={() => setHelpFromSource(\"ZUS\")}>\n                        pokaż pomoc z zus\n                    </StyledButton>\n                    <StyledButton onClick={() => setHelpFromSource(\"UP\")} >\n                        pokaż pomoc z UP\n                    </StyledButton>\n                    <StyledButton onClick={() => setHelpFromSource(\"all\")}>\n                        pokaż wszystko\n                    </StyledButton>\n                </>\n            </ButtonsDiv>\n            \n    \n    );\n};\n\nexport default Buttons;","import { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Form from \"./Form\";\nimport Section from \"./Section\"\nimport Table from \"./Table\";\nimport Buttons from \"./Buttons\";\n\nfunction App() {\n  const getInitialHelps = () => {\n    const helpsFromLocalStorage = localStorage.getItem(\"savedHelps\");\n    return helpsFromLocalStorage\n      ? JSON.parse(helpsFromLocalStorage)\n      : [];\n  };\n\n  const [helps, setHelps] = useState(getInitialHelps);\n  const [helpFromSource, setHelpFromSource] = useState(\"all\");\n\n  const addNewHelp = (amount, trimmedTitle, dateOfHelp, from, helpLaw) => {\n    setHelps(helps => [\n      ...helps,\n      {\n        amount: +amount,\n        title: trimmedTitle,\n        date: dateOfHelp,\n        from: from,\n        law: helpLaw,\n        id: helps.length ? helps[helps.length - 1].id + 1 : 1,\n      }]);\n  };\n\n  const removeHelp = (id) => {\n    setHelps(helps => helps.filter(helps => helps.id !== id));\n  };\n\n  const renderSummary = () => {\n    if (helps) {\n      const sum = (helpFromSource !== \"all\"\n        ? helps.filter(({ from }) => from === helpFromSource)\n        : helps)\n        .reduce((currentSum, help) => currentSum + +help.amount, 0);\n      return sum;\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"savedHelps\", JSON.stringify(helps));\n  }, [helps]);\n\n  return (\n    <>\n      <Header title=\"Pomoc publiczna w ramach tarczy antykryzysowej\" />\n      <Main>\n        <Section title=\"wpisz dane:\">\n          <Form addNewHelp={addNewHelp} />\n        </Section>\n        <Section title=\"moja pomoc publiczna:\">\n          <>\n            <Buttons\n              helps={helps}\n              helpFromSource={helpFromSource}\n              setHelpFromSource={setHelpFromSource}\n            />\n            <Table\n              helps={helps}\n              helpFromSource={helpFromSource}\n              removeHelp={removeHelp}\n            />\n            {!!helps.length &&\n              <Section\n                title=\"suma otrzymanych środków:\">\n                {renderSummary()}{\" \"}PLN\n              </Section>}\n          </>\n        </Section>\n      </Main>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}